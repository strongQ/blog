import{_ as s,o as a,c as n,U as p}from"./chunks/framework.83a19234.js";const C=JSON.parse('{"title":"Zepto.js 基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"docs/库/JQuery/Zepto.md","filePath":"docs/库/JQuery/Zepto.md","lastUpdated":1701308227000}'),o={name:"docs/库/JQuery/Zepto.md"},l=p(`<h1 id="zepto-js-基本使用" tabindex="-1">Zepto.js 基本使用 <a class="header-anchor" href="#zepto-js-基本使用" aria-label="Permalink to &quot;Zepto.js 基本使用&quot;">​</a></h1><p>基本和 jq 完全一样但是用到的模块要单独引入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">$</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tap</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">手指点击</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>zepto 和 jq 的区别</p><p>隐藏的元素的获取宽高</p><p>jq 可以获取隐藏元素的 width（）/height（）</p><p>zepto 中获取隐藏元素的 width（）/height（）都为 0</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">width</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 隐藏的元素在 zepto 中获取宽高为 0</span></span>
<span class="line"><span style="color:#82AAFF;">offset</span><span style="color:#A6ACCD;">()的区别</span></span></code></pre></div><p>jq 中返回一个对象 包含 元素到文档上左边的距离</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">zepto 中返回一个对象，包含元素到文档上左边的距离和元素的宽高</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#sub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">offset</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 元素到文档的上左边的距离</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#sub</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">offset</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// zepto中元素到文档的上左边的距离 和 元素的宽高</span></span></code></pre></div><p>元素的宽高的获取区别</p><p>jq 获取元素的宽有 4 种方法</p><p>zepto 中只有一个 width（）和height（）方法 获取的是占位宽</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">width</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 占位宽 内容宽 + padding + border</span></span>
<span class="line"><span style="color:#82AAFF;">innerWidth</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 没有</span></span>
<span class="line"><span style="color:#82AAFF;">outerWidth</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 没有</span></span>
<span class="line"><span style="color:#82AAFF;">outerWidth</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 没有</span></span></code></pre></div><h2 id="touch-模块" tabindex="-1">touch 模块 <a class="header-anchor" href="#touch-模块" aria-label="Permalink to &quot;touch 模块&quot;">​</a></h2><p>tap 所有的触碰</p><p>singleTap 手指单击</p><p>doubleTap 手指双击</p><p>swipe swipeLeft swipeDown swipeRight swipeUp 手指滑动</p><p>longTap 手指长按</p>`,20),e=[l];function t(c,r,y,F,i,D){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
