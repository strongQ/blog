import{_ as s,o as n,c as a,U as l}from"./chunks/framework.83a19234.js";const f=JSON.parse('{"title":"Node.js Buffer 缓冲区","description":"","frontmatter":{},"headers":[],"relativePath":"docs/服务端/Node.js/Buffer.md","filePath":"docs/服务端/Node.js/Buffer.md","lastUpdated":1701308227000}'),o={name:"docs/服务端/Node.js/Buffer.md"},p=l(`<h1 id="node-js-buffer-缓冲区" tabindex="-1">Node.js Buffer 缓冲区 <a class="header-anchor" href="#node-js-buffer-缓冲区" aria-label="Permalink to &quot;Node.js Buffer 缓冲区&quot;">​</a></h1><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建一个 10 字节的 buffer,长度一旦确定不能更改</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 转成 16 进制存入</span></span>
<span class="line"><span style="color:#A6ACCD;">buf[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">88</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// &lt;Buffer 58 00 00 00 00 00 00 00 00 00&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">buf[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0xaa</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &lt;Buffer 58 aa 00 00 00 00 00 00 00 00&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">buf[</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 没有第十位 设置没效果</span></span>
<span class="line"><span style="color:#A6ACCD;">buf[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">256</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 00 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 最大 255，255 转 16 进制是 ff; 256 二进制 1 后面八个 0,存的时候取二进制后 8位,二进制 8 个 0 还是 16 进制 00 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(buf[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 170 0xaa 控制台打印是 10 进制</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(buf[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// aa 16 进制输出</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> buf1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">allocUnsafe</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &lt;Buffer 31 34 11 c9 bf 02 00 00 49 34&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// allocUnsafe 创建 10 字节,但是不清空内存,之前别的程序使用的内存信息在这里面.可能有敏感信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 将字符串转换成 Buffer 储存</span></span></code></pre></div><p>base64 存储</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">字符</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">base64</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 存储，转换成 base64</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(buf)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 5a2X56ym</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> buf1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(buf</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">base64</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// buf 是字符串 第二个参数以 base64 存储 </span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(buf1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 字符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#A6ACCD;">(size)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 创建一个指定大小的 Buffer</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">allocUnsafe</span><span style="color:#A6ACCD;">(size)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 创建一个指定大小的 buffer，可能包含敏感数据</span></span>
<span class="line"><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 将缓冲区的数据转换成字符串</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">allocUnsafeSlow</span><span style="color:#A6ACCD;">(size)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 慢，不安全的分配空间</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">byteLength</span><span style="color:#A6ACCD;">(string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 获取一个字符串占用内存的大小，默认 utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compare</span><span style="color:#A6ACCD;">(buf1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buf2)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 比较两个 Buffer 是否是同一个</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">([buf1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">buf2])</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 连接多个 Buffer</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isBuffer</span><span style="color:#A6ACCD;">(obj)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 是否是一个 Buffer 返回 true/false</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isEncoding</span><span style="color:#A6ACCD;">(encoding)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 返回是否支持 encoding true/false </span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isEncoding</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isEncoding</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf/8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">poolSize </span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 缓冲池的预分配的内部 Buffer 实例的大小（以字节为单位）可以修改</span></span></code></pre></div>`,4),e=[p];function t(c,r,y,D,A,F){return n(),a("div",null,e)}const i=s(o,[["render",t]]);export{f as __pageData,i as default};
