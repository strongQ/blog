import{_ as s,o as a,c as n,U as l}from"./chunks/framework.83a19234.js";const h=JSON.parse('{"title":"Vue computed 计算属性与 watch 监听","description":"","frontmatter":{},"headers":[],"relativePath":"docs/框架/Vue2/computed与watch.md","filePath":"docs/框架/Vue2/computed与watch.md","lastUpdated":1701307205000}'),p={name:"docs/框架/Vue2/computed与watch.md"},o=l(`<h1 id="vue-computed-计算属性与-watch-监听" tabindex="-1">Vue computed 计算属性与 watch 监听 <a class="header-anchor" href="#vue-computed-计算属性与-watch-监听" aria-label="Permalink to &quot;Vue computed 计算属性与 watch 监听&quot;">​</a></h1><h2 id="computed-计算属性" tabindex="-1">computed 计算属性 <a class="header-anchor" href="#computed-计算属性" aria-label="Permalink to &quot;computed 计算属性&quot;">​</a></h2><p>依赖 data 的数据改变，computed 就会刷新</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#82AAFF;">调用不需要加</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#FFCB6B;">data</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// a 改变，fn 会刷新</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="getter-setter" tabindex="-1">getter，setter <a class="header-anchor" href="#getter-setter" aria-label="Permalink to &quot;getter，setter&quot;">​</a></h3><p>计算属性默认只有 getter</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#676E95;font-style:italic;">// getter</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#FFCB6B;">get</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#676E95;font-style:italic;">// setter</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#FFCB6B;">set</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// name = &#39;a&#39; getter会被调用</span></span></code></pre></div><h2 id="watch-侦听属性" tabindex="-1">watch 侦听属性 <a class="header-anchor" href="#watch-侦听属性" aria-label="Permalink to &quot;watch 侦听属性&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:{</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">obj</span><span style="color:#89DDFF;">:{...}},</span></span>
<span class="line"><span style="color:#FFCB6B;">watch</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">name</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">新值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">旧值</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{},</span><span style="color:#676E95;font-style:italic;">// 浅监听</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 深监听</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">obj</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">deep</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// deep 打开深监听</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">immediate</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// immediate 立即执行</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">handler</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">新值</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{}</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// handler 只有新值</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>name 发生改变时 watch 发生回调</p>`,10),e=[o];function t(c,r,F,y,i,D){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{h as __pageData,u as default};
