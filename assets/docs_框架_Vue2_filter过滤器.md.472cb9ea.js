import{_ as s,o as a,c as l,U as n}from"./chunks/framework.83a19234.js";const C=JSON.parse('{"title":"Vue filter 过滤器","description":"","frontmatter":{},"headers":[],"relativePath":"docs/框架/Vue2/filter过滤器.md","filePath":"docs/框架/Vue2/filter过滤器.md","lastUpdated":1701322974000}'),o={name:"docs/框架/Vue2/filter过滤器.md"},p=n(`<h1 id="vue-filter-过滤器" tabindex="-1">Vue filter 过滤器 <a class="header-anchor" href="#vue-filter-过滤器" aria-label="Permalink to &quot;Vue filter 过滤器&quot;">​</a></h1><ol><li>通过 | 竖线管道符 把前面的数据传入|右边的方法</li><li>局部注册 filters :{方法名(val)</li><li>全局注册 Vue.filter(&#39;方法名&#39;,(val) = &gt; {})</li><li>golbal(&#39;参数&#39;)传入的参数, 方法内golbal(val,参数){} 接收形参第一个参数为 | 前面的值,第二个开始才是传进来的参数</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fn1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">golbal</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sss</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">golbal</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,(</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> val </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> a)</span><span style="color:#676E95;font-style:italic;">// 全局注册</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> vm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">el</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">filters</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#A6ACCD;">​    </span><span style="color:#82AAFF;">fn1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 局部注册，可以多个</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,3),e=[p];function t(c,r,D,y,F,i){return a(),l("div",null,e)}const _=s(o,[["render",t]]);export{C as __pageData,_ as default};
