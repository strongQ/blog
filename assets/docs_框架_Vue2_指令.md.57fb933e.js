import{_ as s,o as a,c as n,U as l}from"./chunks/framework.83a19234.js";const A=JSON.parse('{"title":"Vue 模板指令","description":"","frontmatter":{},"headers":[],"relativePath":"docs/框架/Vue2/指令.md","filePath":"docs/框架/Vue2/指令.md","lastUpdated":1706152240000}'),o={name:"docs/框架/Vue2/指令.md"},p=l(`<h1 id="vue-模板指令" tabindex="-1">Vue 模板指令 <a class="header-anchor" href="#vue-模板指令" aria-label="Permalink to &quot;Vue 模板指令&quot;">​</a></h1><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;">数据</span><span style="color:#89DDFF;">}}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 插值</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">数据</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 带标签的数据不会解析</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">数据</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 会解析 html 标签的数据</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">表达式</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 判断真假，创建或删除; 可选 v-else-if/v-else</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">show</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">表达式</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 显示或隐藏</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">bind</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性名</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">数据</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 动态绑定属性</span></span>
<span class="line"><span style="color:#A6ACCD;"> :属性名 </span><span style="color:#676E95;font-style:italic;">// 动态绑定简写</span></span>
<span class="line"><span style="color:#A6ACCD;">:style </span><span style="color:#676E95;font-style:italic;">// 数组动态更新,对象 {样式:值} 改变不会被检测</span></span>
<span class="line"><span style="color:#A6ACCD;">:</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 数组动态更新,对象 {类名:true} 改变不能被检测</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 对象解决方法 --&gt; Vue.set(改变的对象数据,&#39;新属性&#39;,&#39;值&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 数组[下标]不能更新解决办法 --&gt; Vue.set(改变的数组,&#39;下标&#39;,&#39;值&#39;)或splice</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">事件</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">方法</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 绑定事件</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">事件</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">方法</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 绑定事件简写</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">bind</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[attribute] </span><span style="color:#676E95;font-style:italic;">// 动态参数 2.6.0 +</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[eventName]  </span><span style="color:#676E95;font-style:italic;">// 动态参数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 遍历 in/of 关键字, (item,i) in arr; (val,key,i) of obj;n in 9;</span></span>
<span class="line"><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">变量</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 表单双向绑定 </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// text   --&gt; 获取文本框的值; </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// checkbox --&gt; 单选返回 true/false，多选返回数组[每个复选的 value]; </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// radio  --&gt; 返回单选的 value 值</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// select  --&gt; 单选值为选中的 value，多选为数组</span></span></code></pre></div><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">checkbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">toggle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">true-value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">false-value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">toggle </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 当选中时 </span></span>
<span class="line"><span style="color:#A6ACCD;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">toggle </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 当没有选中时</span></span></code></pre></div><h2 id="自定义指令" tabindex="-1">自定义指令 <a class="header-anchor" href="#自定义指令" aria-label="Permalink to &quot;自定义指令&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-focus</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{i}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.directive(&#39;focus&#39;, function(el,obj)</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// el 原生，obj 参数</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">元素被创建/更新都会被调用</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 注册</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue.directive(&#39;my-directive&#39;, </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  bind: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 创建/绑定</span></span>
<span class="line"><span style="color:#A6ACCD;">  inserted: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 插入</span></span>
<span class="line"><span style="color:#A6ACCD;">  update: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 更新</span></span>
<span class="line"><span style="color:#A6ACCD;">  componentUpdated: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 组件更新后</span></span>
<span class="line"><span style="color:#A6ACCD;">  unbind: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 解绑</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,8),e=[p];function t(c,r,D,y,F,C){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
