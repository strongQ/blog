import{_ as e,o as t,c as o,U as c}from"./chunks/framework.83a19234.js";const g=JSON.parse('{"title":"githubAction 自动化发布部署到服务器","description":"","frontmatter":{},"headers":[],"relativePath":"docs/文章/前端/githubAction自动化发布到服务器.md","filePath":"docs/文章/前端/githubAction自动化发布到服务器.md","lastUpdated":1701309138000}'),a={name:"docs/文章/前端/githubAction自动化发布到服务器.md"},i=c('<h1 id="githubaction-自动化发布部署到服务器" tabindex="-1">githubAction 自动化发布部署到服务器 <a class="header-anchor" href="#githubaction-自动化发布部署到服务器" aria-label="Permalink to &quot;githubAction 自动化发布部署到服务器&quot;">​</a></h1><p>在 github 仓库创建一个自动化配置<code>new workflows</code>，创建好的文件会在项目的<code>.github/workflows/main.yml</code>出现</p><p>将<code>main.yml</code>文件内容修改如下：</p><h2 id="github-变量" tabindex="-1">github 变量 <a class="header-anchor" href="#github-变量" aria-label="Permalink to &quot;github 变量&quot;">​</a></h2><p>因为当前仓库是开源的，直接写服务器地址会被看到，所以这里使用的是<code>github</code>的变量，可以再仓库的<code>setting --&gt; Secrets and variables --&gt; Actions</code>中点击<code>New repository secret</code>创建变量名，名为<code>SERVER_HOST</code>时参考如下使用</p><h2 id="secrets-server-private-key-的设置" tabindex="-1"><code>secrets.SERVER_PRIVATE_KEY</code> 的设置 <a class="header-anchor" href="#secrets-server-private-key-的设置" aria-label="Permalink to &quot;`secrets.SERVER_PRIVATE_KEY` 的设置&quot;">​</a></h2><ol><li>需要在你的服务器运行<code>ssh-keygen -t rsa -b 4096 -C &quot;你的邮箱&quot;</code>创建<code>ssh</code></li><li>运行<code>cat .ssh/id_rsa.pub | ssh b@B &#39;cat &gt;&gt; .ssh/authorized_keys&#39;</code>，其中<code>b@B</code>对应你的服务器登录名与用户名，看控制台当前的用户即可，例如<code>[root@VM-0-3-centos ~]# </code></li></ol>',7),s=[i];function d(r,n,h,_,l,u){return t(),o("div",null,s)}const p=e(a,[["render",d]]);export{g as __pageData,p as default};
