import{_ as s,o as a,c as n,U as l}from"./chunks/framework.83a19234.js";const C=JSON.parse('{"title":"Vue 属性更新检测","description":"","frontmatter":{},"headers":[],"relativePath":"docs/框架/Vue2/更新检测.md","filePath":"docs/框架/Vue2/更新检测.md","lastUpdated":1706152240000}'),p={name:"docs/框架/Vue2/更新检测.md"},o=l(`<h1 id="vue-属性更新检测" tabindex="-1">Vue 属性更新检测 <a class="header-anchor" href="#vue-属性更新检测" aria-label="Permalink to &quot;Vue 属性更新检测&quot;">​</a></h1><h2 id="数组更新检测" tabindex="-1">数组更新检测 <a class="header-anchor" href="#数组更新检测" aria-label="Permalink to &quot;数组更新检测&quot;">​</a></h2><p>push、pop、shift、unshift、splice、sort、reverse</p><p>filter()、concat()、slice() 返回新数组替换旧数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">arr[i] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> xx </span><span style="color:#89DDFF;">---&gt;</span><span style="color:#A6ACCD;"> Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;">(数组</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">下标</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">新值) vm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$set</span><span style="color:#A6ACCD;">(数组</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">下标</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">新值) vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">数组</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#A6ACCD;">(下标</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">新值)</span></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> n  </span><span style="color:#89DDFF;">---&gt;</span><span style="color:#A6ACCD;"> vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">数组</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#A6ACCD;">(新长度)</span></span></code></pre></div><h2 id="对象添加属性" tabindex="-1">对象添加属性 <a class="header-anchor" href="#对象添加属性" aria-label="Permalink to &quot;对象添加属性&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 全局set</span></span>
<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;">(改变的对象</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">添加的键</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">值)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 实例set</span></span>
<span class="line"><span style="color:#A6ACCD;">实例</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$set</span><span style="color:#A6ACCD;">(改变的对象</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">添加的键</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">值)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 多个属性</span></span>
<span class="line"><span style="color:#A6ACCD;">改变的对象 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assign</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;">改变的对象</span><span style="color:#89DDFF;">,{</span><span style="color:#A6ACCD;">对象1</span><span style="color:#89DDFF;">},{</span><span style="color:#A6ACCD;">对象2</span><span style="color:#89DDFF;">}...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 后面的对象合并到第一个参数,并返回第一个参数的引用,再复制给改变的对象</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第一个参数需要是新对象,如果是要改变的对象引用不会变</span></span></code></pre></div><h2 id="对象删除属性" tabindex="-1">对象删除属性 <a class="header-anchor" href="#对象删除属性" aria-label="Permalink to &quot;对象删除属性&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#A6ACCD;">(对象</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">属性名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">实例</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$delete</span><span style="color:#A6ACCD;">(对象</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">属性名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="this-nexttick" tabindex="-1">this.$nextTick <a class="header-anchor" href="#this-nexttick" aria-label="Permalink to &quot;this.$nextTick&quot;">​</a></h2><p>数据被修改且渲染之后再调用next回调,并返回promise对象</p><p>this.$nextTick这个方法作用是当数据被修改后使用这个方法会回调获取更新后的dom再渲染出来</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">methods：</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">testClick</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">改变了的值</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​      </span><span style="color:#676E95;font-style:italic;">// dom元素更新后执行，因此这里能正确打印更改之后的值</span></span>
<span class="line"><span style="color:#F07178;">​      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">that</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 改变了的值</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),e=[o];function t(c,r,D,y,F,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
