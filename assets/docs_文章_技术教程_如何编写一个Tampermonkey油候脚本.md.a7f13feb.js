import{_ as e,o as a,c as s,U as t}from"./chunks/framework.83a19234.js";const r="/assets/01.7d60e275.png",p="/assets/02.00a43cb2.png",o="/assets/03.a4a70161.png",n="/assets/04.3324e4d8.png",i="/assets/05.f5a6696e.png",m="/assets/06.31005630.png",l="/assets/07.8d81802e.png",c="/assets/08.39cf1376.png",_="/assets/09.aed22165.png",d="/assets/10.7b07776e.png",g="/assets/11.f2b45658.png",h="/assets/12.f4b519b2.png",k="/assets/13.b43160cb.png",y="/assets/14.9d389af6.png",f="/assets/15.246bffea.png",u="/assets/16.b6ddbdf0.png",b="/assets/17.79b2bb32.jpg",$=JSON.parse('{"title":"用 vscode 如何编写一个 Tampermonkey 油候脚本","description":"","frontmatter":{},"headers":[],"relativePath":"docs/文章/技术教程/如何编写一个Tampermonkey油候脚本.md","filePath":"docs/文章/技术教程/如何编写一个Tampermonkey油候脚本.md","lastUpdated":1701307513000}'),j={name:"docs/文章/技术教程/如何编写一个Tampermonkey油候脚本.md"},T=t('<h1 id="用-vscode-如何编写一个-tampermonkey-油候脚本" tabindex="-1">用 vscode 如何编写一个 Tampermonkey 油候脚本 <a class="header-anchor" href="#用-vscode-如何编写一个-tampermonkey-油候脚本" aria-label="Permalink to &quot;用 vscode 如何编写一个 Tampermonkey 油候脚本&quot;">​</a></h1><p>当看到 <a href="https://greasyfork.org/zh-CN/scripts" target="_blank" rel="noreferrer">Greasy Fork</a> 上面这么多大佬写的脚本，为何不自己写一个呢</p><p><img src="'+r+'" alt="tampermonkey插件列表"></p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh" target="_blank" rel="noreferrer">tampermonkey 安装地址</a></p><h2 id="tampermonkey-引入外部文件" tabindex="-1">Tampermonkey 引入外部文件 <a class="header-anchor" href="#tampermonkey-引入外部文件" aria-label="Permalink to &quot;Tampermonkey 引入外部文件&quot;">​</a></h2><p>在开始之前我们先添加一个 Tampermonkey 脚本</p><p><img src="'+p+'" alt="添加tampermonkey脚本"></p><p>function 闭包里面则是我们要写 js 的地方</p><p><img src="'+o+'" alt="tampermonkey初始代码"></p><p>当然，我们是要在编辑器上写，在这里写的话并没有代码提示，这需要从最上面的注释中引入本地的 js 文件</p><p>在引入之前需要允许 Tampermonkey 插件访问本地文件，在插件管理找到允许访问本地 url 即可。这里以 edge 为例，chrome 也是一样设置</p><p><img src="'+n+'" alt="允许访问本地文件url"></p><p><img src="'+i+'" alt="允许访问本地文件url"></p><p>接下来在 vscode 中新建一个 js 文件，并把插件编辑的内容复制到 vscode 中。</p><p><img src="'+m+'" alt="在vscode上写tampermonkey"></p><p>修改一些注释上的东西</p><ul><li>@name：插件名称</li><li>@namespace：命名空间</li><li>@version：版本号</li><li>@description：详细说明</li><li>@author：作者</li><li>@match：脚本运行在哪些网站上，* 表示通配符任意字符</li><li>@icon：插件图标</li></ul><p>在 Tampermonkey 中添加一行注释，与 vscode 中的文件关联。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @require file:绝对路径</span></span></code></pre></div><p><img src="'+l+'" alt="引入外部文件"></p><p>此时文件已经引入进来了，测试之前在 Tampermonkey 上面添加一行 match 来表示在哪个网站上运行这个脚本，这里以百度为例。添加好之后 Ctrl + s 保存一下，再在 vscode 中写一段代码用来后续测试</p><p><img src="'+c+'" alt="添加路径引入外部文件"></p><p>接下来打开百度</p><p><img src="'+_+'" alt="测试脚本"></p><p>成功！可以看到 Tampermonkey 显示这个插件加载了。想做什么样的操作就跟写原生 js 一样的</p><p>本站的： <img src="'+d+'" alt="预览"></p><p>百度 Tampermonkey 脚本写的： <img src="'+g+'" alt="百度tampermonkey脚本"></p><h2 id="引入-jquery" tabindex="-1">引入 jQuery <a class="header-anchor" href="#引入-jquery" aria-label="Permalink to &quot;引入 jQuery&quot;">​</a></h2><p>添加一行注释 @require 引入线上地址即可，vscode 与 Tampermonkey 插件要同时引入，Tampermonkey 插件是用来本地测试的，vscode 写的文件是之后要用来发布的</p><p>当然有些链接的 js 是不允许引入的，具体哪些不能引入<a href="https://greasyfork.org/zh-CN/help/external-scripts" target="_blank" rel="noreferrer">点击查看</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @require      https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js</span></span></code></pre></div><p><img src="'+h+'" alt="引入jQuery"></p><h2 id="发布脚本" tabindex="-1">发布脚本 <a class="header-anchor" href="#发布脚本" aria-label="Permalink to &quot;发布脚本&quot;">​</a></h2><p>在<a href="https://greasyfork.org/zh-CN" target="_blank" rel="noreferrer">greasyfork</a> 上登录账户发布自己写的脚本</p><p><img src="'+k+'" alt="发布脚本"></p><h2 id="配置-git-仓库自动同步脚本" tabindex="-1">配置 git 仓库自动同步脚本 <a class="header-anchor" href="#配置-git-仓库自动同步脚本" aria-label="Permalink to &quot;配置 git 仓库自动同步脚本&quot;">​</a></h2><p>代码提交到 git 仓库之后希望 greasyfork 自动同步自己提交代码，这里以 gitee 为例。</p><p>在 gitee 上找到 js 文件点开原始数据的链接复制到 greasyfork 上即可。</p><p><img src="'+y+'" alt="gitee原始数据同步至tampermonkey"></p><p><img src="'+f+'" alt="gitee原始数据同步至tampermonkey"></p><p><img src="'+u+'" alt="gitee原始数据同步至tampermonkey"></p><p>默认附加信息也可以选择填写，这里主要是脚本的说明文件。</p><h2 id="我的脚本" tabindex="-1">我的脚本 <a class="header-anchor" href="#我的脚本" aria-label="Permalink to &quot;我的脚本&quot;">​</a></h2><p>这里我写的一些脚本，欢迎关注，<a href="https://greasyfork.org/zh-CN/users/794260-tomiaa" target="_blank" rel="noreferrer">点击跳转</a></p><p><img src="'+b+'" alt="我的tampermonkey脚本"></p>',45),q=[T];function v(x,C,P,N,z,S){return a(),s("div",null,q)}const A=e(j,[["render",v]]);export{$ as __pageData,A as default};
