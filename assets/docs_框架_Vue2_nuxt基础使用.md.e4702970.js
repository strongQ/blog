import{_ as s,o as a,c as n,U as p}from"./chunks/framework.83a19234.js";const C=JSON.parse('{"title":"nuxt 基础使用","description":"","frontmatter":{},"headers":[],"relativePath":"docs/框架/Vue2/nuxt基础使用.md","filePath":"docs/框架/Vue2/nuxt基础使用.md","lastUpdated":1701307205000}'),l={name:"docs/框架/Vue2/nuxt基础使用.md"},o=p(`<h1 id="nuxt-基础使用" tabindex="-1">nuxt 基础使用 <a class="header-anchor" href="#nuxt-基础使用" aria-label="Permalink to &quot;nuxt 基础使用&quot;">​</a></h1><p>安装</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create-nuxt-app</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">项目</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><p>└─my-nuxt-demo</p><p>├─.nuxt // Nuxt 自动生成，临时的用于编辑的文件，build</p><p>├─assets // 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript,对于不需要通过 Webpack 处理的静态资源文件，可以放置在 static 目录中</p><p>├─components // 用于自己编写的 Vue 组件，比如日历组件、分页组件</p><p>├─layouts // 布局目录，用于组织应用的布局组件，不可更改 ⭐</p><p>├─middleware // 用于存放中间件</p><p>├─node_modules</p><p>├─pages // 用于组织应用的路由及视图,Nuxt.js 根据该目录结构自动生成对应的路由配置，文件名不可更改 ⭐</p><p>├─plugins // 用于组织那些需要在 根 vue.js 应用 实例化之前需要运行的 Javascript 插件。</p><p>├─static // 用于存放应用的静态文件，此类文件不会被 Nuxt.js 调用 Webpack 进行构建编译处理。 服务器启动的时候，该目录下的文件会映射至应用的根路径 / 下。文件夹名不可更改。⭐</p><p>└─store // 用于组织应用的 Vuex 状态管理。文件夹名不可更改。⭐</p><p>├─.editorconfig // 开发工具格式配置</p><p>├─.eslintrc.js // ESLint 的配置文件，用于检查代码格式</p><p>├─.gitignore // 配置 git 忽略文件</p><p>├─nuxt.config.js // 用于组织 Nuxt.js 应用的个性化配置，以便覆盖默认配置。文件名不可更改。⭐</p><p>├─package-lock.json // npm 自动生成，用于帮助 package 的统一设置的，yarn 也有相同的操作</p><p>├─package.json // npm 包管理配置文件</p><p>├─README.md</p><h2 id="页面及路由" tabindex="-1">页面及路由 <a class="header-anchor" href="#页面及路由" aria-label="Permalink to &quot;页面及路由&quot;">​</a></h2><p>└─pages</p><p>├─index.vue</p><p>└─user</p><p>├─index.vue</p><p>├─one.vue</p><p>nuxt 会自动生成路由, 访问/是 pages 下的 index.vue 访问/user 是 user 下的 index.vue 访问/user/one 也是</p><p>页面跳转</p><p>不要写 a 链接,因为是重新获取一个新的页面,而不是 SPA</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">nuxt-link</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">nuxt-link</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">声明导航 this.$router.push(&#39;/users&#39;) 编程导航</span></span></code></pre></div><p>动态路由</p><p>需要创建对应的以下划线作为前缀的 Vue 文件 或 目录。</p><p>验证动态路由参数, 返回 true 表示通过，false 会跳转到 404 页面</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">validate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#A6ACCD;">cosole</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="异步请求" tabindex="-1">异步请求 <a class="header-anchor" href="#异步请求" aria-label="Permalink to &quot;异步请求&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">asyncData</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">$http</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">post</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$http</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">https://api.nuxtjs.dev/posts/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">post</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>asyncData 在服务端发送请求不存在跨域</p><p>因为 created 会触发两次，mounted 只会在浏览器触发一次</p><h2 id="自定义路由" tabindex="-1">自定义路由 <a class="header-anchor" href="#自定义路由" aria-label="Permalink to &quot;自定义路由&quot;">​</a></h2><p>nuxt.config.js</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">router</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">extendRoutes</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#A6ACCD;">routes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">​      path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">​      redirect</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/center</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">​    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,43),e=[o];function t(c,r,y,F,D,i){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
