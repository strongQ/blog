import{_ as s,o as a,c as n,U as l}from"./chunks/framework.83a19234.js";const A=JSON.parse('{"title":"node.js 模块引入","description":"","frontmatter":{},"headers":[],"relativePath":"docs/服务端/Node.js/模块引入.md","filePath":"docs/服务端/Node.js/模块引入.md","lastUpdated":1701322974000}'),o={name:"docs/服务端/Node.js/模块引入.md"},p=l(`<h1 id="node-js-模块引入" tabindex="-1">node.js 模块引入 <a class="header-anchor" href="#node-js-模块引入" aria-label="Permalink to &quot;node.js 模块引入&quot;">​</a></h1><h2 id="require-引入模块-commonjs规范" tabindex="-1">require 引入模块-commonjs规范 <a class="header-anchor" href="#require-引入模块-commonjs规范" aria-label="Permalink to &quot;require 引入模块-commonjs规范&quot;">​</a></h2><p>核心模块</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 引入 http 模块</span></span></code></pre></div><ul><li>引入的模块会先从当前目录 node_modules 找，没有继续往上一级目录找，直到根目录，没有则报错</li><li>文件模块：一个模块就是一个js文件</li><li>引入的是路径必须以 ./ 或 ../ 开头</li><li>引入后返回一个对象，返回的就是引入模块的返回值</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> md </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./02-module.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 引入本地模块 .js可以省略</span></span></code></pre></div><p>每一个 js 文件模块都有一个文件作用域，无法返回引入模块的变量</p><p>exports 暴露给外部的变量</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#A6ACCD;">变量名 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 另一个文件即可访问该变量</span></span></code></pre></div><p>引入自定义模块</p><ol><li>node_modules 下文件夹名字为模块名字, require 引入文件夹名字</li><li>nodejs会自动找到文件夹下的 index.js 文件。如果不是 index 会报错</li><li>修改模块文件夹下 package.json 的 main 参数可以设置引入时的 index 为其他名字</li></ol><h2 id="模块的参数" tabindex="-1">模块的参数 <a class="header-anchor" href="#模块的参数" aria-label="Permalink to &quot;模块的参数&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arguments</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callee </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 当前函数 + &#39;&#39; 隐式调用 toString</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 函数最开始添加此代码</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">exports</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">require</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">__filename</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">__dirname</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arguments</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callee</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 函数结尾添加此代码</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>实际上模块中运行的代码都包装在一个函数中，并在执行时传递5个实参</p><ul><li>require：函数，用来引入外部的模块</li><li>exports：将对象或变量暴露到外部</li><li>module <ul><li>module 代表这个函数的本身</li><li>exports 就是 module 的属性</li><li>既可以使用 module.exports 导出，也可以使用 exports 导出</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">exports;</span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><ul><li>__filename：</li></ul><p>e:\\Web\\Node\\createHttp.js</p><p>​ 当前文件所在路径</p><ul><li>__dirname：</li></ul><p>​e:\\Web\\Node</p><p>​ 当前文件夹所在路径</p><h2 id="exports" tabindex="-1">exports <a class="header-anchor" href="#exports" aria-label="Permalink to &quot;exports&quot;">​</a></h2><p>exports是module.exports的引用，module.exports是真实存在的，最终返回的是module.exports</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 可以用</span></span>
<span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 不可用</span></span>
<span class="line"><span style="color:#89DDFF;">exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 代码 */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 赋值对象会改变引用地址,实际的 module.exports 对象内的值并没有被修改</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可用</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可用</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 代码 */</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">exports</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">module.exports;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">exports,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">exports,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dependencies</span><span style="color:#89DDFF;">:{}</span><span style="color:#A6ACCD;"> 依赖</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">此包依赖另外的哪些包 类型jq插件依赖jq</span></span>
<span class="line"><span style="color:#FFCB6B;">description</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> 描述</span></span>
<span class="line"><span style="color:#FFCB6B;">devDependencis</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> 开发环境依赖</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">生成环境不依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">homepage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> 主页</span></span>
<span class="line"><span style="color:#FFCB6B;">license</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> 权限</span></span>
<span class="line"><span style="color:#FFCB6B;">main</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">主文件</span></span>
<span class="line"><span style="color:#FFCB6B;">maintainers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> 主要贡献者</span></span>
<span class="line"><span style="color:#FFCB6B;">contributors</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 维护者</span></span>
<span class="line"><span style="color:#FFCB6B;">bugs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 提交bug地址</span></span>
<span class="line"><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> 包的名字</span></span>
<span class="line"><span style="color:#FFCB6B;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 版本</span></span>
<span class="line"><span style="color:#FFCB6B;">keywords</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 关键字</span></span>
<span class="line"><span style="color:#FFCB6B;">repositories</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 仓库</span></span>
<span class="line"><span style="color:#FFCB6B;">os</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 系统</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node ./bin/www</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 用 npm start 启动www.js 只有键为start可以省略 run</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nodemon ./bin/www</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 用npm run dev 启动 www.js </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,27),e=[p];function t(c,r,D,y,F,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
