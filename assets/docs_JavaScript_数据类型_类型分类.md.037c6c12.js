import{_ as a,o as t,c as e,U as o}from"./chunks/framework.83a19234.js";const S=JSON.parse('{"title":"JavaScript 数据类型分类","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/数据类型/类型分类.md","filePath":"docs/JavaScript/数据类型/类型分类.md","lastUpdated":1701334581000}'),i={name:"docs/JavaScript/数据类型/类型分类.md"},c=o('<h1 id="javascript-数据类型分类" tabindex="-1">JavaScript 数据类型分类 <a class="header-anchor" href="#javascript-数据类型分类" aria-label="Permalink to &quot;JavaScript 数据类型分类&quot;">​</a></h1><ol><li>变量声明分为字面量创建和构造函数（实例化）创建</li><li>构造函数创建 typeof 检测数据类型都为 object</li><li>原生对象：String，Number，Boolean，Function，object，Array，Date，Error，RegExp，global，Math</li><li>内置对象：global，Math</li><li>宿主对象：DOM，BOM</li><li>全局对象：window（document 属于 window 下）</li></ol><p>事实上，不存在全局变量或全局函数这种东西。在全局作用域中定义的变量和函数都会变成 Global 对象的属性。（包括<code>isNaN()</code>、<code>isFinite()</code>、<code>parseInt()</code>和 <code>parseFloat()</code>）</p>',3),r=[c];function l(s,d,_,n,p,h){return t(),e("div",null,r)}const f=a(i,[["render",l]]);export{S as __pageData,f as default};
